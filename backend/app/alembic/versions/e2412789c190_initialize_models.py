"""Initialize models

Revision ID: e2412789c190
Revises:
Create Date: 2023-11-24 22:55:43.195942

"""
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "e2412789c190"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("full_name", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("is_part_of_lab", sa.Boolean(), nullable=False),
        sa.Column("can_edit_items", sa.Boolean(), nullable=False),
        sa.Column("can_edit_labs", sa.Boolean(), nullable=False),
        sa.Column("can_edit_users", sa.Boolean(), nullable=False),
        sa.Column("user_id", postgresql.UUID(), nullable=False),
        sa.Column("hashed_password", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_table(
        "item",
        sa.Column("item_name", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("current_room", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.Column("table_name", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.Column("system_name", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.Column("current_owner_id", postgresql.UUID(), nullable=True),
        sa.Column("taken_at", sa.DateTime(), nullable=True),
        sa.Column("item_img_url", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.Column("item_vendor", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.Column("item_params", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.Column("is_available", sa.Boolean(), nullable=True),
        sa.Column("item_id", postgresql.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["current_owner_id"],
            ["user.user_id"],
        ),
        sa.PrimaryKeyConstraint("item_id"),
    )
    op.create_table(
        "room",
        sa.Column("room_number", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("room_place", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("room_owner_id", postgresql.UUID(), nullable=True),
        sa.Column("room_id", postgresql.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["room_owner_id"],
            ["user.user_id"],
        ),
        sa.PrimaryKeyConstraint("room_id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("room")
    op.drop_table("item")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    # ### end Alembic commands ###